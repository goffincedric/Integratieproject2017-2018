@model UI_MVC.Models.SubplatformSettingViewModel


<link href="~/Content/Styling/jquery.minicolors.css" rel="stylesheet" />
@using (Html.BeginForm("SubplatformSetting", "Subplatform", FormMethod.Post))
{

  <div class="form-group row">
    <div class="col-sm-4">
      <label>Default Theme</label>
    </div>
    <div class="col-sm-6">
      @Html.DropDownListFor(model => model.Theme, new SelectList(Enumerable.Empty<SelectList>()), "Kies een default theme...", new { @class = "form-control", @id = "FromJson" })
    </div>
  </div>
  <div class="form-group row">
    <div class="col-sm-4">
      <label>Change site name</label>
    </div>
    <div class="col-sm-6">
      <div class="row">
        @Html.EditorFor(model => model.SiteName, new { htmlAttributes = new { @class = "form-control" } })
      </div>
    </div>
  </div>
  if (User.IsInRole("SuperAdmin"))
  {
    <div class="form-group row">
      <div class="col-sm-4">
        <label>Aantal dagen bijhouden records</label>
      </div>
      <div class="col-sm-6">
        <div class="row">
          @Html.EditorFor(model => model.recordsBijhouden, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
        </div>
      </div>
    </div>
  }

  <div class="form-group row">
    <div class="col-sm-4">
      <label>API Source</label>
    </div>
    <div class="col-sm-6">
      <div class="row">
        @Html.EditorFor(model => model.APIsource, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
      </div>
    </div>
  </div>

  <div class="form-group row">
    <div class="col-sm-4">
      <label>Add social source</label>
    </div>
    <div class="col-sm-6">
      @Html.EditorFor(model => model.SocialSource, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
      <br />
      @Html.EditorFor(model => model.SocialSourceUrl, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
    </div>
  </div>

  <div class="form-group row">
    <div class="col-sm-4">
      <label>Primary Color</label>
    </div>
    <div class="col-sm-6">
      @Html.EditorFor(model => model.PrimaryColor, new { htmlAttributes = new { @id = "saturation-demo", @Value = "#0088cc", @class = "form-control demo", @type = "text" } })
    </div>
  </div>

  <div class="form-group row">
    <div class="col-sm-4">
      <label>Secondary Color</label>
    </div>
    <div class="col-sm-6">

      @Html.EditorFor(model => model.SecondaryColor, new { htmlAttributes = new { @id = "saturation-demo", @Value = "#0088cc", @class = "form-control demo", @type = "text" } })
    </div>
  </div>



  <button type="submit" class="btn btn-lg btn-primary">Deploy new settings</button>
}
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/Colorpicker/jquery.minicolors.min.js"></script>
<script>
  $(function () {
    var colpick = $('.demo').each(function () {
      $(this).minicolors({
        control: $(this).attr('data-control') || 'hue',
        inline: $(this).attr('data-inline') === 'true',
        letterCase: 'lowercase',
        opacity: false,
        change: function (hex, opacity) {
          if (!hex) return;
          if (opacity) hex += ', ' + opacity;
          try {
            console.log(hex);
          } catch (e) { }
          $(this).select();
        },
        theme: 'bootstrap'
      });
    });

    var $inlinehex = $('#inlinecolorhex h3 small');
    $('#inlinecolors').minicolors({
      inline: true,
      theme: 'bootstrap',
      change: function (hex) {
        if (!hex) return;
        $inlinehex.html(hex);
      }
    });
  });

	$("#FromJson").append($("<option></option>").val("Light").html("Light mode"));

	$("#FromJson").append($("<option></option>").val("Dark").html("Dark mode"));

	$("#FromJson").append($("<option></option>").val("Future").html("Future mode"));

	$('#FromJson option:eq("@Html.Raw(Model.Theme)")').prop('selected', true);

</script>