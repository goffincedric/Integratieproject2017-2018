@model UI_MVC.Models.SubplatformSettingViewModel


@using (Html.BeginForm("SubplatformSetting", "Subplatform", FormMethod.Post))
{
  <div class="form-group row">
    <div class="col-sm-4">
      <label>Default Theme</label>
    </div>
    <div class="col-sm-6">
      @Html.DropDownListFor(model => model.Theme, new SelectList(Enumerable.Empty<SelectList>()), "Kies een default theme...", new { @class = "form-control", @id = "FromJson" })
    </div>
  </div>
  <div class="form-group row">
    <div class="col-sm-4">
      <label>Change site name</label>
    </div>
    <div class="col-sm-6">
      <div class="row">
        @Html.EditorFor(model => model.SiteName, new { htmlAttributes = new { @class = "form-control" } })
      </div>
    </div>
  </div>
  if (User.IsInRole("SuperAdmin"))
  {
    <div class="form-group row">
      <div class="col-sm-4">
        <label>Aantal dagen bijhouden records</label>
      </div>
      <div class="col-sm-6">
        <div class="row">
          @Html.EditorFor(model => model.recordsBijhouden, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
        </div>
      </div>
    </div>
  }

  <div class="form-group row">
    <div class="col-sm-4">
      <label>API Source</label>
    </div>
    <div class="col-sm-6">
      <div class="row">
        @Html.EditorFor(model => model.APIsource, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
      </div>
    </div>
  </div>

  <div class="form-group row">
    <div class="col-sm-4">
      <label>Add social source</label>
    </div>
    <div class="col-sm-6">
      @Html.EditorFor(model => model.SocialSource, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
      <br />
      @Html.EditorFor(model => model.SocialSourceUrl, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
    </div>
  </div>
  <div class="form-group row">
    <div class="col-sm-4">
      <label>Primary Color</label>
    </div>
    <div class="col-sm-6">
      @Html.EditorFor(model => model.PrimaryColor, new { htmlAttributes = new { @type = "text", @id = "Primary", @class = "form-control" } })
      <span class="input-group-addon"><i></i></span>

    </div>
  </div>
  <div class="form-group row">
    <div class="col-sm-4">
      <label>Secondary Color</label>
    </div>
    <div class="col-sm-6">
      @Html.EditorFor(model => model.SecondaryColor, new { htmlAttributes = new { @type="text", @id = "Secondary", @class = "form-control"} })
      <span class="input-group-addon"><i></i></span>

    </div>
  </div>
  <button type="submit" class="btn btn-lg btn-primary">Deploy new settings</button>
}
<script src="~/Scripts/Colorpicker/colorpicker-color.js"></script>
<script src="~/Scripts/Colorpicker/colorpicker-component.js"></script>
<script src="~/Scripts/Colorpicker/colorpicker-defaults.js"></script>
<script src="~/Scripts/Colorpicker/colorpicker-plugin-wrapper.js"></script>
<script>

  $("#primary").colorpicker();
  $("#secondary").colorpicker();

  $("#FromJson").append($("<option></option>").val("Light").html("Light mode"));

  $("#FromJson").append($("<option></option>").val("Dark").html("Dark mode"));

  $("#FromJson").append($("<option></option>").val("Future").html("Future mode"));

  $('FromJson>option:eq("@Html.Raw(Model.Theme)")').prop('selected', true);

</script>