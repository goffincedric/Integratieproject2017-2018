@model UI_MVC.Models.AccountEditModel
@{
  ViewBag.Title = "My Account";
  Layout = "~/Views/Shared/_Layout.cshtml";
}


<main class="main-content bgc-grey-100">
  <div id="mainContent">
    <div class="container-fluid">
      <div class="bgc-white p-10 bd mB-10">
        <h3>My Profile Settings</h3>
      </div>
      <div class="bgc-white p-10 bd mB-10">
        <h4 class="bb-2">Basic Profile<span class="arrow-account"><i class="ti-angle-up"></i></span></h4>

        @using (Html.BeginForm("Account", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
          @Html.AntiForgeryToken()
          <form>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-row">
              <div class="form-group col-md-6" style="margin-bottom:75px;">
                <div class="form-row h-50" style="padding-top:25px;">
                  <img class="img-fluid" src="@ViewBag.ProfileImage" style="max-height:100px; max-width:100px;">
                  <div class="fileUpload blue-btn btn width100 w-75" style="margin-top: 25px; margin-left: 15px;">
                    <span>Upload a new profile picture</span>
                    <input type="file" class="uploadlogo" name="file" id="file" />
                  </div>
                </div>
               
                <div class="form-row">
                  <label for="inputEmail4">Email</label>
                  @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @type = "email", @placeholder = "Email" } })
                </div>
                <br />
                <div class="form-row">
                  <label for="inputEmail4">Gebruikersnaam</label>
                  @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @id = "inputGebruikersnaam", @type = "text", @placeholder = "Gebruikersnaam" } })
                </div>
                <br />
                <div class="form-row">
                  <div class="form-group col-md-6">
                    <div class="form-row2">
                      <label for="inputEmail4">Achternaam</label>
                      @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Achternaam" } })
                    </div>
                  </div>
                  <div class="form-group col-md-6">
                    <div class="form-row3">
                      <label for="inputEmail4">Voornaam</label>
                      @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Voornaam" } })
                    </div>
                  </div>
                </div>

              </div>
              <div class="form-group col-md-6" style="margin-bottom:75px">
                <div class="h-50"></div>
                <div class="h-50">
                 
                  <div class="form-row">
                    <label for="inputAddress">Straat en huisnummer</label>
                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Straat + huisnummer" } })
                  </div>
                  <br />
                  <div class="form-row">
                    <label for="inputCity">Stad</label>
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "City" } })
                  </div>
                  <br />
                  <div class="form-row">
                    <div class="form-group col-md-6">
                      <div class="form-row2">
                        <label for="inputState">Provincie</label>
                        @Html.EnumDropDownListFor(model => model.Province, htmlAttributes: new { @class = "form-control" })
                      </div>
                    </div>
                    <br />
                    <div class="form-group col-md-6">
                      <div class="form-row3">
                        <label for="inputZip">Postcode</label>
                        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "postcode" } })
                      </div>
                    </div>
                  </div>
                </div>

                
              </div>
            </div>
            <div class="form-row col-md-12">
              <button type="submit" class="btn btn-primary">Opslaan</button>
            </div>
            
          </form>
        }
      </div>

      @{
        Html.RenderAction("_ResetPassword", "Account");
      }

      @{
        Html.RenderAction("_DeleteProfile", "Account");
      }

    </div>
  </div>
</main>
@Scripts.Render("~/bundles/AccountControl")
<script>
  $(document).ready(function ($) {

    // Upload btn on change call function
    $(".uploadlogo").change(function () {
      var filename = readURL(this);
      var name = filename.substring(filename.indexOf(".") + 1); 
      var username = "@Model.UserName.ToString()";
      console.log(name);
      $(this).parent().children('span').html( username + "." + name);
    });

    // Read File and return value  
    function readURL(input) {
      var url = input.value;
     
      var ext = url.substring(url.lastIndexOf('.') + 1).toLowerCase();
      if (input.files && input.files[0] && (
        ext == "png" || ext == "jpeg" || ext == "jpg" || ext == "gif" 
      )) {
        var path = $(input).val();
        var filename = path.replace(/^.*\\/, "");
        // $('.fileUpload span').html('Uploaded Proof : ' + filename);
        return "Uploaded file : " + filename;
      } else {
        $(input).val("");
        return "Only image formats are allowed!";
      }
    }
    // Upload btn end

  });
</script>