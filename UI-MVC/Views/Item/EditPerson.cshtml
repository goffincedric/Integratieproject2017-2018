@model UI_MVC.Models.PersonEditModel

@{
  ViewBag.Title = "Edit Person";
}
<main class="main-content bgc-grey-100">
  <div id="mainContent">
    @using (Html.BeginForm("EditPerson", "Item", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
      @Html.AntiForgeryToken()
    <div class="form-horizontal">
      <div style="margin: 10px 0;padding:0;" class="masonry-item col-md-12">
        <div class="bgc-white p-20 bd">
          <h1 class="h3" style="text-align: center">Beheer @Html.DisplayFor(model => model.Name)</h1>
        </div>
      </div>

      <div style="margin: 10px 0;padding:0;" class="masonry-item col-md-12">
        <div class="bgc-white p-20 bd">

          <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ItemId)
            <div class="col-6">
              <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                  @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
              </div>
              <div class="form-group">
                @Html.LabelFor(model => model.IsTrending, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                  <label class="switch">
                    @Html.EditorFor(model => model.IsTrending)
                    <div class="slider round"></div>
                  </label>
                  @Html.ValidationMessageFor(model => model.IsTrending, "", new { @class = "text-danger" })
                </div>
              </div>

              <div class="form-group">
                @Html.LabelFor(model => model.OrganisationId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                  @Html.DropDownListFor(model => model.OrganisationId, new SelectList(Enumerable.Empty<SelectList>()), "Kies een partij", new { @class = "form-control", @id = "FromJson" })
                  @Html.ValidationMessageFor(model => model.OrganisationId, "", new { @class = "text-danger" })
                </div>
              </div>
            </div>

            <div class="col-6">

              <div class="form-group">
                <label class="control-label col-md-2">Upload an icon</label>
                <div class="col-md-10">
                  <div class="fileUpload blue-btn btn w-100">
                    <span>Upload a new icon</span>
                    <input type="file" class="uploadlogo" name="file" id="file" />
                  </div>
                </div>
              </div>
              <div class="form-group">
                @Html.LabelFor(model => model.SocialMediaLink, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                  @Html.EditorFor(model => model.SocialMediaLink, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.SocialMediaLink, "", new { @class = "text-danger" })
                </div>
              </div>
              <div class="form-group">
                @Html.LabelFor(model => model.Gemeente, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                  @Html.EditorFor(model => model.Gemeente, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.Gemeente, "", new { @class = "text-danger" })
                </div>
              </div>
            </div>
          </div>
          <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
              <input type="submit" value="Save" class="btn btn-default" />
            </div>
          </div>
        </div>
      </div>
    </div>
        }
     
      <button class="btn btn-lg">
        @Html.ActionLink("Back to itembeheer", "ItemBeheer", "Item")
      </button>

    </div>
  </main>

  <script type="text/javascript">
    $(document).ready(function () {
      $("#IsHot").change();
    });
  </script>
  <script>
  var tmp = "";

  tmp = $.ajax({
    async: false,
    type: 'GET',
    dataType: 'json',
    headers: { 'x-api-key': '303d22a4-402b-4d3c-b279-9e81c0480711' },
    url: "https://localhost:44342/api/item/GetOrganisation"
    }).responseJSON;

    console.log(tmp);

  for (var i = 0; i < tmp.length; i++) {
    let id = "@Html.Raw(Model.OrganisationId)";
    console.log(id);
    if (id == "" || id == null) {
      $("#FromJson").append($("<option></option>").val(tmp[i].ItemId).html(tmp[i].Name));
    } else {
      if (i === (id - 1)) {
        $("#FromJson").append($("<option></option>").val(tmp[i].ItemId).html(tmp[i].Name).prop('selected', true));
      } else {
        $("#FromJson").append($("<option></option>").val(tmp[i].ItemId).html(tmp[i].Name));
      }
    }

  }
  </script>


  @if (Model is UI_MVC.Models.PersonEditModel)
  {
    <script>
     $('FromJson>option:eq("@Html.Raw(Model.OrganisationId)")').prop('selected', true);

    </script>
  }

  <script>
    $(document).ready(function ($) {

      // Upload btn on change call function
      $(".uploadlogo").change(function () {
        var filename = readURL(this);
        var name = filename.substring(filename.indexOf(".") + 1);

        console.log(name);
        $(this).parent().children('span').html(filename);
      });

      // Read File and return value
      function readURL(input) {
        var url = input.value;

        var ext = url.substring(url.lastIndexOf('.') + 1).toLowerCase();
        if (input.files && input.files[0] && (
          ext == "png" || ext == "jpeg" || ext == "jpg" || ext == "gif"
        )) {
          var path = $(input).val();
          var filename = path.replace(/^.*\\/, "");
          // $('.fileUpload span').html('Uploaded Proof : ' + filename);
          return "Uploaded file : " + filename;
        } else {
          $(input).val("");
          return "Only image formats are allowed!";
        }
      }
      // Upload btn end

    });
  </script>