@model UI_MVC.Models.PersonEditModel

@{
  ViewBag.Title = "EditPerson";
}
<main class="main-content bgc-grey-100">
  <div id="mainContent">
    @using (Html.BeginForm())
    {
      @Html.AntiForgeryToken()

    <div class="form-horizontal">
      <h4>Person</h4>
      <hr />
      @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      @Html.HiddenFor(model => model.ItemId)

      <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.IsTrending, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          <div class="checkbox">
            @Html.EditorFor(model => model.IsTrending)
            @Html.ValidationMessageFor(model => model.IsTrending, "", new { @class = "text-danger" })
          </div>
        </div>
      </div>
      <div class="form-group">
        @Html.LabelFor(model => model.OrganisationId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

          @Html.DropDownListFor(model => model.OrganisationId, new SelectList(Enumerable.Empty<SelectList>()), "Kies een partij", new { @class = "form-control", @id = "FromJson" })

          @Html.ValidationMessageFor(model => model.OrganisationId, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.IconURL, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.IconURL, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.IconURL, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.SocialMediaLink, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.SocialMediaLink, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.SocialMediaLink, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
          <input type="submit" value="Save" class="btn btn-default" />
        </div>
      </div>
    </div>
    }

    <button class="btn btn-secondar" onclick="@Url.Action("Itembeheer","Item")">Back to all items</button>
  </div>
</main>

<script type="text/javascript">
  $(document).ready(function () {
    $("#IsHot").change();
  });
</script>
<script>
  var tmp = "";

  tmp = $.ajax({
    async: false,
    type: 'GET',
    dataType: 'json',
    headers: { 'x-api-key': '303d22a4-402b-4d3c-b279-9e81c0480711' },
    url: "https://localhost:44342/api/item/GetOrganisation"
  }).responseJSON;



  for (var i = 0; i < tmp.length; i++) {
    $("#FromJson").append($("<option></option>").val(tmp[i].ItemId).html(tmp[i].Name));
    //$("FromJson").append($("<option></option>").val(tmp[i].ItemId).html(tmp[i].Name));

  }


</script>