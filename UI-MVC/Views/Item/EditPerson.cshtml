@model PB.BL.Domain.Items.Person

@{
    ViewBag.Title = "EditPerson";
}
<main class="main-content bgc-grey-100">
  <div id="mainContent">
    @using (Html.BeginForm())
    {
      @Html.AntiForgeryToken()

      <div class="form-horizontal">
        <h4>Person</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ItemId)

        <div class="form-group">
          @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.IsTrending, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
            <div class="checkbox">
              @Html.EditorFor(model => model.IsTrending)
              @Html.ValidationMessageFor(model => model.IsTrending, "", new { @class = "text-danger" })
            </div>
          </div>
        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.IconURL, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.IconURL, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IconURL, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.TrendingScore, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.TrendingScore, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TrendingScore, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.SocialMediaLink, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.SocialMediaLink, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SocialMediaLink, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group">
          <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
          </div>
        </div>
      </div>
    }

    <button class="btn btn-secondar" onclick="@Url.Action("Itembeheer","Item")">Back to all items</button>
  </div>
</main>