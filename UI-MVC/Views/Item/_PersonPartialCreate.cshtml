@model PB.BL.Domain.Items.Person

<div class="bgc-white p-20 bd">
  <h4 class="fw-300 c-grey-900 mB-40">Create new person</h4>
  @using (Html.BeginForm("PersonPartialCreate", "Item", FormMethod.Post))
  {
    @Html.AntiForgeryToken()
  <form>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
      @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
      </div>
    </div>
    <div class="form-group">
      @Html.LabelFor(model => model.Organisation, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.DropDownList("FromJson", new SelectList(Enumerable.Empty<SelectList>()));
        @Html.ValidationMessageFor(model => model.Organisation, "", new { @class = "text-danger" })
      </div>
    </div>
    @using (Html.BeginForm(new { htmlAttributes = new { @id = "formCheck" } }))
  {
    <div class="form-group">
      @Html.LabelFor(model => model.IsTrending, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @*<div class="checkbox">*@
        <label class="switch">
          @Html.CheckBoxFor(model => model.IsTrending, new { @class = "form-control" })
          <div class="slider round"></div>
        </label>
        @Html.ValidationMessageFor(model => model.IsTrending, "", new { @class = "text-danger" })
        @*</div>*@
      </div>
    </div>
    
}

    <div class="form-group">
      @Html.LabelFor(model => model.SocialMediaLink, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.SocialMediaLink, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.SocialMediaLink, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.IconURL, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.IconURL, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.IconURL, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Create" class="btn btn-default" />
      </div>
    </div>
  </form>
  }

  <div>
  </div>
</div>
<script>
  var tmp = "";
  let headers = {
    "x-api-key": "303d22a4-402b-4d3c-b279-9e81c0480711"
  }
  $.ajax({
    async: false,
    type: 'GET',
    dataType: 'json',
    Headers: headers,
    url: "https://localhost:44342/api/item/GetOrganisation",
    succes: function (result) {
      $(result).each(function () {
        $("FromJson").append($("<option></option>").val(this.ID).html(this.Name));

      });
    },
    error: function (data) { }
  });


  //$('#table1').DataTable().ajax.reload();
  $(document).ready(function () {
    $("#IsHot").change(function () {
      if ($("#IsHot").is(":checked")) {
        $("#formCheck").submit();
      }
    });
  });

</script>