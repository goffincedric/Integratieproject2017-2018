@model PB.BL.Domain.Items.Organisation
<style>
  .switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
  }

    .switch input {
      display: none;
    }

  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: .4s;
  }

    .slider:before {
      position: absolute;
      content: "";
      height: 26px;
      width: 26px;
      left: 4px;
      bottom: 4px;
      background-color: white;
      transition: .4s;
    }

  input[type="checkbox"]:checked + input[type="hidden"] + .slider,
  input[type="checkbox"]:checked + .slider {
    background-color: #2196F3;
  }

  input[type="checkbox"]:focus + input[type="hidden"] + .slider,
  input[type="checkbox"]:focus + .slider {
    box-shadow: 0 0 1px #2196F3;
  }

  input[type="checkbox"]:checked + input[type="hidden"] + .slider:before,
  input[type="checkbox"]:checked + .slider:before {
    transform: translateX(26px);
  }

  /* Rounded sliders */
  .slider.round {
    border-radius: 34px;
  }

    .slider.round:before {
      border-radius: 50%;
    }

</style>
<div class="col-12 col-md-4 peer pX-40 pY-80 h-100 bgc-white scrollable pos-r" style="min-width:320px">
  <h4 class="fw-300 c-grey-900 mB-40">Create new organisation</h4>
  @using (Html.BeginForm("OrganisationPartialCreate", "Item", FormMethod.Post))
  {

    @Html.AntiForgeryToken()
    <form>

      @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.IsHot, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @*<div class="checkbox">*@
          <label class="switch">
            @Html.CheckBoxFor(model => model.IsHot, new { @class = "form-control" } )
            <div class="slider round"></div>
          </label>
          @Html.ValidationMessageFor(model => model.IsHot, "", new { @class = "text-danger" })
          @*</div>*@
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.SocialMediaLink, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.SocialMediaLink, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.SocialMediaLink, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.IconURL, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.IconURL, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.IconURL, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
          <input type="submit" value="Create" class="btn btn-default" />
        </div>
      </div>
    </form>
  }

  <div>
  </div>
</div>

<script type="text/javascript">
  $(document).ready(function () {
    $("#IsHot").change();
  });
</script>