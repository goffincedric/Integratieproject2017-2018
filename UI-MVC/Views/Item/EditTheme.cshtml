@model UI_MVC.Models.ThemeEditModel

@{
  ViewBag.Title = "Edit Theme";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<main class="main-content bgc-grey-100">
  <div id="mainContent">
    @using (Html.BeginForm("EditTheme", "Item", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
      @Html.AntiForgeryToken()
      <div class="form-horizontal">
        <div style="margin: 10px 0;padding:0;" class="masonry-item col-md-12">
          <div class="bgc-white p-20 bd">
            <h1 class="h3" style="text-align: center">Beheer @Html.DisplayFor(model => model.Name)</h1>
          </div>
        </div>
        <div style="margin: 10px 0;padding:0;" class="masonry-item col-md-12">
          <div class="bgc-white p-20 bd">
            <div class="row">
              @Html.ValidationSummary(true, "", new { @class = "text-danger" })
              @Html.HiddenFor(model => model.ItemId)
              <div class="col-6">
                <div class="form-group">
                  @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                  <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                  </div>
                </div>
                <div class="form-group">
                  @Html.LabelFor(model => model.IsTrending, htmlAttributes: new { @class = "control-label col-md-2" })
                  <div class="col-md-10">
                    <label class="switch">
                      @Html.EditorFor(model => model.IsTrending)
                      @Html.ValidationMessageFor(model => model.IsTrending, "", new { @class = "text-danger" })
                      <div class="slider round"></div>
                    </label>
                  </div>
                </div>
                <div class="form-group">
                  @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                  <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                  </div>
                </div>

              </div>
              <div class="col-6">
                <div class="form-group">
                  <label class="control-label col-md-2">Add new keyword to theme</label>
                  <div class="col-md-10">
                    @Html.DropDownListFor(model => model.KeywordId, new SelectList(Enumerable.Empty<SelectList>()), "Kies een keyword", new { @class = "form-control", @id = "FromJson" })

                    @Html.ValidationMessageFor(model => model.KeywordId, "", new { @class = "text-danger" })
                  </div>
                </div>
                <div class="form-group">
                  <label class="control-label col-md-2">Upload an icon</label>
                  <div class="col-md-10">
                    <div class="fileUpload blue-btn btn w-100">
                      <span>Upload a new icon</span>
                      <input type="file" class="uploadlogo" name="file" id="file" />
                    </div>
                  </div>
                </div>
              </div>

            </div>



            <div class="form-group">
              <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
              </div>
            </div>
          </div>
        </div>
      </div>



    }
    @Html.Action("_ShowKeywordOfTheme", "item", new { id = Model.ItemId })

    <button class="btn btn-lg">
      @Html.ActionLink("Back to itembeheer", "ItemBeheer", "Item")
    </button>
  </div>

</main>

<script type="text/javascript">
  $(document).ready(function () {
    $("#IsHot").change();
  });
</script>
<script>
  var tmp = "";

  tmp = $.ajax({
    async: false,
    type: 'GET',
    dataType: 'json',
    headers: { 'x-api-key': '303d22a4-402b-4d3c-b279-9e81c0480711' },
    url: "https://localhost:44342/api/item/GetKeywordsNotInTheme/"+ "@Model.ItemId"
  }).responseJSON;

  for (var i = 0; i < tmp.length; i++) {

      $("#FromJson").append($("<option></option>").val(tmp[i].KeywordId).html(tmp[i].Name));
    }

</script>