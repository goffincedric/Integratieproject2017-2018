@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{

    <link href="~/Content/Styling/grid2/gridstack.css" rel="stylesheet" />
    <link href="~/Content/Styling/grid2/gridstack-extra.css" rel="stylesheet" />
    <style type="text/css">

        #grid1 {
            <!-- border: 3px solid black; -->
            padding: 3px;
            margin-bottom: 10px;
        }

        #grid2 {
            <!-- border: 3px solid red; -->
            margin-top: 5px;
        }

        .grid-stack-item-content {
            color: #2c3e50;
            text-align: center;
            background-color: #18bc9c;
        }

        #grid2 .grid-stack-item-content {
            background-color: grey;;
        }

        #grid1 .grid-stack-item-content {
            background-color: grey;;
        }
    </style>
}

<main class="main-content bgc-grey-100">
    <div id="mainContent">
        <div>
            <h1>Main trends</h1>
            <div style="margin-bottom:5px" class="buttons">
                <a class="btn btn-default save-grid" id="save-grid" href="#">Save Grid 1</a>
                <a class="btn btn-default load-grid" id="load-grid" href="#">Load Grid 1</a>
                <a class="btn btn-default clear-grid" id="clear-grid" href="#">Clear Grid 1</a>
            </div>
            <div class="grid-stack grid-stack-6" id="grid1">
            </div>
        </div>

        <div>
            <h1>Personal trends</h1>
            <div style="margin-bottom:5px" class="buttons">
                <a class="btn btn-default save-grid" id="save-grid2" href="#">Save Grid 2</a>
                <a class="btn btn-default load-grid" id="load-grid2" href="#">Load Grid 2</a>
                <a class="btn btn-default clear-grid" id="clear-grid2" href="#">Clear Grid 2</a>
            </div>
            <div class="grid-stack grid-stack-6" id="grid2">
            </div>
        </div>
    </div>


    <br>
    <hr />
    @*<textarea id="saved-data-1" cols="20" rows="10" readonly="readonly"></textarea>
        <textarea id="saved-data-2" cols="20" rows="10" readonly="readonly"></textarea>*@
</main>


<script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/3.5.0/lodash.min.js"></script>

<script src="~/Scripts/grid2/gridstack.js"></script>
<script src="~/Scripts/grid2/gridstack.jQueryUI.js"></script>

<script type="text/javascript">
    $(function () {
        var options = {
            width: 6,
            float: false,
            removable: '.trash',
            removeTimeout: 100,
            acceptWidgets: '.grid-stack-item'
        };
        $('.grid-stack').gridstack(options);
        //$('.grid-stack').gridstack(_.defaults({
        //    float: true
        //}, options));

        new function () {
            var items1 = [{ "x": 0, "y": 3, "width": 5, "height": 5 }, { "x": 0, "y": 0, "width": 2, "height": 3 }];
            var items2 = [{ "x": 0, "y": 0, "width": 5, "height": 5 }, { "x": 0, "y": 1, "width": 2, "height": 3 }];

            this.grid1 = $('#grid1').data('gridstack'); 
            this.grid2 = $('#grid2').data('gridstack');

            //done
            clearGrid = function (grid) {
                grid.removeAll();

                return false;
            }.bind(this);


            loadGrid = function (grid) {
                console.log(grid);
                grid.each(function () {

                    var grid = $(this).data('gridstack');

                    //this for now(change later)
                    _.each(items1, function (node) {
                        grid.addWidget($('<div><div class="grid-stack-item-content bgc-white bd"/><div/>'),
                            node.x, node.y, node.width, node.height);
                    }, this);
                });
            }

            this.saveGrid1 = function () {
                this.items1 = _.map($('#grid1 > .grid-stack-item:visible'), function (el) {
                    el = $(el);
                    var node = el.data('_gridstack_node');
                    return {
                        x: node.x,
                        y: node.y,
                        width: node.width,
                        height: node.height
                    };
                }, this);
                $('#saved-data-1').val(JSON.stringify(this.items1, null, '    '));
                return false;
            }.bind(this);

            this.saveGrid2 = function () {
                this.items2 = _.map($('#grid2 > .grid-stack-item:visible'), function (el) {
                    el = $(el);
                    var node = el.data('_gridstack_node');
                    return {
                        x: node.x,
                        y: node.y,
                        width: node.width,
                        height: node.height
                    };
                }, this);
                $('#saved-data-2').val(JSON.stringify(this.items2, null, '    '));
                return false;
            }.bind(this);

            $(".grid-stack").each(function () {
                this.grid = $(this).data('gridstack');
                //console.log($('#grid1'));

                $(this).siblings('.buttons').children('.load-grid').on("click", function () {
                    this.grid = $(this).parent().siblings('.grid-stack').data('gridstack');
                    console.log("yooo");
                    loadGrid($(this).parent().siblings('.grid-stack'));
                });

                //Clearing Zone/grid done
                $(this).siblings('.buttons').children('.clear-grid').on("click", function () {
                    this.grid = $(this).parent().siblings('.grid-stack').data('gridstack');
                    clearGrid(this.grid);
                });

                loadGrid($(this));
            });

            $('#save-grid').click(this.saveGrid1);
            $('#save-grid2').click(this.saveGrid2);
        };
    });
</script>